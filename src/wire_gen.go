// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
)

// Injectors from limiter.wire.go:

func InitializeLimiterServiceServer(ctx context.Context, logger2 *logrus.Logger, opts RedisOpts) (*LimiterServiceServer, error) {
	redisURI := opts.Uri
	redisPassword := opts.Pass
	redisUsername := opts.Username
	redisService, err := NewRedisService(ctx, logger2, redisURI, redisPassword, redisUsername)
	if err != nil {
		return nil, err
	}
	engine := gin.Default()
	remoteURL := opts.Remote
	limiterServiceServer := &LimiterServiceServer{
		Service:   redisService,
		Logger:    logger2,
		G:         engine,
		RemoteURL: remoteURL,
	}
	return limiterServiceServer, nil
}

// limiter.wire.go:

type RedisOpts struct {
	Uri      RedisURI
	Pass     RedisPassword
	Username RedisUsername
	Remote   RemoteURL
}
